cmake_minimum_required(VERSION 3.18 FATAL_ERROR)

if(${SE_MODE})
    link_directories(${GEM5_PATH}/util/m5/build/x86/out)
endif()

set(THREADS_PREFER_PTHREAD_FLAG ON)
find_package(Threads REQUIRED)
link_directories(${M5_PATH})
add_executable(false-sharing false-sharing.c)
add_executable(true-sharing true-sharing.c)
add_executable(no-false-sharing no-false-sharing.c)
add_executable(fs-ts-sameline fs-ts-sameline.c)
add_executable(fs-ts-diffline fs-ts-diffline.c)
add_executable(both-false-and-true-sharing both-false-and-true-sharing.c)
add_executable(both-true-and-false-sharing both-true-and-false-sharing.c)
add_executable(proportional-ts proportional-ts.c)
add_executable(proportional-fs proportional-fs.c)
add_executable(repetitive-fs-ts-sameline repetitive-fs-ts-sameline.c)
add_executable(repetitive-fs-ts-diffline repetitive-fs-ts-diffline.c)
add_executable(false-sharing-char false-sharing-char.c)
add_executable(false-sharing-short false-sharing-short.c)
add_executable(false-sharing-long false-sharing-long.c)

# https://leimao.github.io/blog/CMake-Public-Private-Interface/
if(${CUSTOM_HOOK})
    target_link_libraries(false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(true-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(fs-ts-diffline PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(no-false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(both-false-and-true-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(both-true-and-false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(repetitive-fs-ts-diffline PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(proportional-ts PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(repetitive-fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(proportional-fs PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(false-sharing-char PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(false-sharing-short PRIVATE Threads::Threads PRIVATE libhooks_prospar)
    target_link_libraries(false-sharing-long PRIVATE Threads::Threads PRIVATE libhooks_prospar)
elseif(${STATIC_BINARY})
    target_link_libraries(false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(true-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(fs-ts-diffline PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(no-false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(both-false-and-true-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(both-true-and-false-sharing PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(repetitive-fs-ts-diffline PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(proportional-ts PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(repetitive-fs-ts-sameline PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(proportional-fs PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(false-sharing-char PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(false-sharing-short PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
    target_link_libraries(false-sharing-long PRIVATE Threads::Threads PRIVATE libhooks_prospar -static)
elseif(${SE_MODE})
    target_link_libraries(false-sharing PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(true-sharing PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(fs-ts-diffline PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(no-false-sharing PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(both-false-and-true-sharing PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(both-true-and-false-sharing PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(repetitive-fs-ts-diffline PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(proportional-ts PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(repetitive-fs-ts-sameline PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(proportional-fs PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(false-sharing-char PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(false-sharing-short PRIVATE Threads::Threads PRIVATE m5)
    target_link_libraries(false-sharing-long PRIVATE Threads::Threads PRIVATE m5)
else()
    target_link_libraries(false-sharing PRIVATE Threads::Threads)
    target_link_libraries(true-sharing PRIVATE Threads::Threads)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads)
    target_link_libraries(fs-ts-diffline PRIVATE Threads::Threads)
    target_link_libraries(fs-ts-sameline PRIVATE Threads::Threads)
    target_link_libraries(no-false-sharing PRIVATE Threads::Threads)
    target_link_libraries(both-false-and-true-sharing PRIVATE Threads::Threads)
    target_link_libraries(both-true-and-false-sharing PRIVATE Threads::Threads)
    target_link_libraries(repetitive-fs-ts-diffline PRIVATE Threads::Threads)
    target_link_libraries(proportional-ts PRIVATE Threads::Threads)
    target_link_libraries(repetitive-fs-ts-sameline PRIVATE Threads::Threads)
    target_link_libraries(proportional-fs PRIVATE Threads::Threads)
    target_link_libraries(false-sharing-char PRIVATE Threads::Threads)
    target_link_libraries(false-sharing-short PRIVATE Threads::Threads)
    target_link_libraries(false-sharing-long PRIVATE Threads::Threads)
endif()
